[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^2"
requests = "^2.31.0"
frinx-python-sdk = "^2"
frinx-uniconfig-api = { git = "https://github.com/FRINXio/frinx-services-python-api.git", tag = "frinx-uniconfig-api_v1.2.0", subdirectory = "uniconfig/python" }

[tool.poetry.group.dev.dependencies]
ruff = "^0"
mypy = "^1"
pyright = "1.1.338"
types-requests = "^2.31.0.2"
pytest = "^7"

[tool.poetry]
packages = [{ include = "frinx_worker" }]
name = "frinx-uniconfig-worker"
description = "Conductor worker for Frinx Uniconfig"
authors = ["Jozef Volak <jozef.volak@elisapolystar.com>"]
version = "2.2.1"
readme = ["README.md", "CHANGELOG.md", "RELEASE.md"]
keywords = ["frinx-machine", "uniconfig", "worker"]
license = "Apache 2.0"

[project.urls]
Homepage = 'https://github.com/FRINXio/frinx-python-sdk'
Source = 'https://github.com/FRINXio/frinx-python-sdk'

[tool.pyright]
include = ['frinx_worker']
reportGeneralTypeIssues = "none"
reportIncompatibleVariableOverride = false

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
extend-select = ['Q', 'RUF100', 'C90', 'UP', 'I', 'E', 'F', 'N', 'PL']
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]

[tool.ruff.lint.isort]
known-first-party = ['frinx_worker', 'tests']
force-single-line = true

[tool.ruff.lint.flake8-quotes]
inline-quotes = 'double'
multiline-quotes = 'double'

[tool.ruff.lint.mccabe]
max-complexity = 14

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-args = 10

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["classmethod", "pydantic.field_validator", "pydantic.model_validator"]

[tool.mypy]
python_version = "3.10"
plugins = ["pydantic.mypy"]
explicit_package_bases = true
namespace_packages = true
strict = true
pretty = true
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_subclassing_any = false
warn_unused_ignores = false

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true
